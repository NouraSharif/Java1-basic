package Youtubebasic1;
import java.util.Scanner;
import java.util.Arrays;
public class Youtubebasic1 {
    public static void main(String[] args) {
        //نت بينز او ايكلبس
        
        //شرح عادل نسيم على اليوتيوب
        //programming Java برمجة جافا
        
        //استخدامات لغة الجافا
        
        //application mobile (android os)
        //desktop GUI application (linux-mac os-windows)تطبيقات سطح المكتب واجهة المستخدم الرسومية 
        //تطبيق الة حاسبة او تطبيق ضخم مثلا الفوتوشوب
        //Web applications
        //Gaming applications
        //Enterprise Applications لتلبية احتياجات مؤسسة كاملة
        //او بدنا نبني نظام لشكة كبيرة مثال شركة اروكل جميع الانظمة بها مبنة على الجافا
        //نظام محاسبة _نظام مشتريات_نظام علاقات زبائن_نظام مبيعات
        //جميع هاي الأنظمة تتحاكى مع بعضها وتخرج بنظالم كبير جدا
        //ٍSecurity الجافا توفر ادوات وخوارزميات تشفير وبرامج  لتعمل امان على البرامج
        
        //ناخذ بعين الاعتبار جميع انظنة التشغيل من حولنا سواء لسيارات غسالات ثلاجات
        //اللي بشغلها برامج مكتوبة بلغة جافا
        
        //لغة الجافا تلتزم بمبدأ البرمجة كائنية التوجه
        //OOP
        //برامج الجافا تعمل على أغلب نظم التشغيل 
        //مش حكر لنظام تشغيل معين وهي ميزة
        //write once run anywhere
        //بحيث أكتب الكود مرة وحدة وبشتغل معي بأكثر من نظام تشغيل
        
        //لغة الالة في البدايات ماشية على نظام الباينري الزيرو والواحد
        //ولحتى تتبسط الامور على المبرمجين اخترعو لغات البرمجة الهاي لانجوج الجافا والسي الخ
        //اللغات هاي وسيط بين المبرمج والحاسوب
        //كيف تتم العملية بين المبرمج والحاسوب
        //1 لما اكتب الكود هاد اسمه سورس كود بكتبه لحتى ينفذ امر معين //.java file
        //نلاحظ لما كتبنا الاكواد مفهوم الكلام المكتوب بناء على سينتاكس اللغة الخ المهم انه مفهوم فهاي اللغة هاي ليفل لانوج
        //////////وظيفة لغة البرمجة/////////////////////////////////////
        //انها تحول من هاي ليفل ل لو ليفل لانوج اي لغة تفهمها الالة
        //وقبل ما يفهمه المالشين يمر بمراحل
        //اولا :javac(java compiler) الكود يمر على المترجم
        //المترجم بتأكد ازا انت كاتب الكود صح اي بناء على سينتاكس اللغة
        //ثانيا:(Byte code)المترجم يحول اي امر الى :الذي هو عبارة عن كود تم التأكد من كتابته بشكل صحيح://.class file
        //(JVM:java virtual machine):interpter عبارة عن:انتربتر او برنامج مهمته انه يشغل الكود على اغلب نظم التشغيل//هذا الذي يميز الجافا انها بتشتغل على اكثر من نظام تشغيل
        // jvm:يعني لما تنزل الادوات الخاصة بالجافا بنزل معها:على اساس يخلي الامور متوافقة مع اي نظام تشغيل
        
        
        //يوجد أكثر من اصدار للجافا وكل واحد منهم بتعلق بعمل تطبيقات معينة
        //The programing language platform
        //1 Java platform :Standard Edition(Java SE)====disctop applications//رح نتعامل مع الاصدار الاول
        //2 Java platform:Enterprise Edition(Java EE)====Web applications-Server applications 
        //الاصدار الثاني خاص ببرمجة تطبيقات الويب والخوادم
        //3 Java platform:Micro Edition(Java ME)=====Mobile applications-Gaming applications
        //4: JavaFX
           /*
             platform foe disctop-mobile and empbedded system
           */   
        
           
           //لتنزل برنامج الجافا نحتاج بعض الادوات الخاصة بها
           //JDK:بيئة تطوير الخاصة بالجافا
           //IDE for java(معناها بيئة تطوير عمل):اي دي اي لكتابةالاكواد داخل برمجية معينة ولكن نختار تكون خاصة بالجافا
             /*
              Netbenese IDE
           المحرر الاكثر شهرة لكتابة اكواد الجافا
           Apatche Netbense احدث نسخة من النت بينز حاليا
           
           */
             //ممكن اشتغل  على اون لاين كومبايلر لو ما اقدرت انزل الاي دي
             //واكثر موقع شهير //ideone.com
             //بحدد اللغة اللي بدي استخدمها الجافا مثلا 
             
                                             
        //اول ما نبدا نعمل مشروع بتظهر واحهة انه كتابة الكود بلغة جافا وجنبها انه هنعمل الكودعبارة عن جافا ابليكيشن
        //ثم التالي
        /*
        اسم المشروع لاوم يكون من كلمة 
        لو كلمتين كل كلمة اول حرف كابيتال //بنفع بيناتهم الدولار والاندر سكور$_
        وممكن نحدد brows ايمكان المشروع وين يكون او ممكن يكون ديفولت
         وبالاخر ممكن نحدد اسم الباكيت وممكن نسيبه ديفولت
        */
        //لو انشأنا كلاس لازم يكون اسمه نفس اسم الفايل اللي فيه هذا لاكلاس عشان الكومبايلر يقدر ينسب الكلاس للفايل عن طريق انه نفس الاسم
        
        
        //لما يكون عندي خطأ في كتابة الكود
        //رح ينبهني الاي دي اي
        
        System.out.println("Noura Sharif:\"I love\r you\"");
        System.out.println("'I love you'");
        //لما يكون عندي خطأ في الكود رح ينبهني الكومبايلر
        //ٍSyntax Erorr//يسمى ايضا//run time error
        //logical erorr//الخطأ ما بكون ظاهر الا بعد ما نعمل رن //سببه خطأ زي لما نقسم رقم على صفر هذا ما بنفع
        
        
        //\r في السابق كانت ترجعلي اي كلمة بتيجي بعدها لاول الجملة على الكلام المكتوب سابق
        //\r اما الان بترجعلي الكلام اللي بيجي بعدها على سطر جديد//==\n
        
        //\b back spase الحرف اللي قبلها مباشرة بتحذفه
        
        
        
        //الدرس الثالث
        //data type
         //لحتى نخزن قيمة بنحتاج متغير هذا لامتغير بنحتاج نحدد قيمته
         //اول ما نعرف متغير بدون ما نعطيه قيمة ديكيالاريشن
         //لما نعطيه قيمة تعتبر قيمة ابتدائة تسمى انتيلايزيشن
         
         
         //المتغير ما بنفع يحتوي على الرموز ما عدال الاندر سكور وعلامة الدولار
         //ما بنفع اسم المتغير يحتوي على سبيس
         //الارقام ممكن يحتوي عليها اسم المتغير بس ممنوع يبدأ بارقام
         
         int $=33;
         int __=44;//الاندر سكور تكون ضمن حرف//حطيت الحرف اندر سكور يعني دبل اندر سكور نقبلت
         int a44=77;
         
         System.out.println($);
         System.out.println(__);
        
        //بختار نوع الداتا حسب حجم القيمة اللي بدي اخزنها
        //هل مستاهلة اخزنها في نوع بيانات حجمه كبير
        
        //النوع الاول للبيانات
        //primitive data type (8types)
        //Byte ----يستقبل الارقام الصحيحة ---127-----(-128)
        //Short---تستهلك من الذاكرة 16 بت-------32767---(-32768)
        //int:ايضا تستقبل الارقام الصحيحة //يحجز في الذاكرة 32 بت
        
        //لو انا بدي احسب اعلى قيمة ممكن تخزنا لانتجر
        //من خلال استخدام دالة ماكس فاليو
        System.out.println(Integer.MAX_VALUE);//2147483647//هذا اكبر رقم ممكن اخزن في المتغير من نوع انتجر
        //واقل رقم ممكن يخزنه بجيبه من خلال الدالة مينيمم
        System.out.println(Integer.MIN_VALUE);
        
        //float:لتخزين رقم عشري//زاي رقم بخزنه بحط جنب الرقم اف
        float in=22.4f;//22.4 just===erorr
        //بطبعلي سبع ارقام بعد الفاصلة العشرية 
        //بستهلك 32 بت من الذاكرة
        
        //لو بدي ازود ارقام اكثر من استيعاب حجم انتجر بستخدم
        //long//رح يحجز في الذاكرة 64بت
        //ولحتى يفهم انه الرقم لونج نبر 
        //بضيف حرف الال
        long a=22999999955434l;
        System.out.println(Long.MAX_VALUE);
        
        //لو بدي اخزن حرف
        //بستخدم نوع البيانات
        //char
        //لازم احط الحرف داخل سينجل كوت
        //على كل حرف يحجز في الذاكرة 16بت
        
        char b='*'+'3';
        System.out.println(b);//]
        //لو بدي استخدم قيمة منطقية معينة اي ترو اور فولس
        //بستخدم  boolean
        
        //لو بدي اخزن نص كامل يحتوي على مجموعة من الأحرف
        //بستخدم String
        //نوع البيانات هذا لا يعتبر ===no primitive data type
        //لانه ما كان موجود باللغة//كنا نستدعي السترينج من خلال مكتبة
        //refirance/obiect data type
        //لازم النص يكون داخل دبل كوتيشن
        String h="hhhhh nnnnnn";
        
        //لو عملنا عمليات بين انواع بيانات مختلفة
        //دائما اكبر داتا تايب هو الناتج
        //float double=double  ....etc
        
        //15/2=7 int int=int
        //15.0/2=7.5 double int=double 
        
        //ازا انا عرفت متغيريين انتجر وبدي نتيجة قسمتهم في لحظة معينة فلوت 
        //عن طريق استخدام
        //type casting
        
        int f=20,r=10;
        System.out.println((double)f/r);
        
        //عملية التحويل من الاقل للاعلى
        //widining primiteve conversions
        //من الاعلى للقل
        //narrowing primiteve conversions
        
        //++x prefix/pre increment
        //x++ post increment
        
        //في عملة الزيادة
        //اللي بفرق معي في جملة الطباعة 
        
       int c=5;
       int j= c++ * c;//في العمليات الحسابية الاولوية بعد الأقواس تاتي للزيادة او النقصان
       j-=c;//j=j-c;
       System.out.println(j);
        
        
        //الدرس السادس بدي اخلي المستخدم يتفاعل مع لابروجرام عن طريق
        //Scanner
        
        //كلاس سكنر//بنشئ اوبجكت من الكلاس//عشان اقدر استخدم الكلاس بعمل تهيئة من خلال نيو سكنر الخ
        Scanner input=new Scanner(System.in);
        //ولحتى افعل استخدامي لهذا لاكلاس لازم استخدم المكتبة الموجود فيه هذا لاكلاس
        //import java.util.Scanner;
        System.out.print("Enter your name:");
        String s=input.nextLine();//بقدر اخزن نص عن طريق الفانكشن نكس لاين 
        System.out.printf("She name is:%S%n",s); //لما نستخدم حرف السترينج او الشاراكتر كابيتال يحولي الكلمة اللي بكتبها لكابيتال
        
        //كلاس سكنر بوفر مجموعة من الفانكشنز
        //nextInt()...etc
        
        //برنامج ياخد عددين كسريين ثم يطبع مجموعهم
        System.out.print("the first number:");
        float oo=input.nextFloat();
        System.out.print("the second numberf:");
        Float ii=input.nextFloat();
        System.out.println(oo+"+"+ii+"="+(oo+ii));
        double sum=oo+ii;
        System.out.println("avg="+sum/2);
        System.out.println("sum"+(oo+ii));
        //next()تنفذ لعند السبيس
        //nextLine()تقرا السبي ازا كان موجود
        
        //كيف ممكن ادخل حرف واحد
        //لو استخدمنا نكس او نكس لاين رح يعطي ايرور
        //لاني بدي ادخل حرف واحد فقط مش نص
        System.out.print("Enter text:");
        char e=input.next().charAt(0);//معناها انا بدي الحرف الاول من نكس لما استخدمنا فنكشن شاراكتر
        System.out.println("output:"+e);
        
        //لما اعمل اشارة جمع بين نص ورقم النتيجة نص
        //وكذلك لما اطبع رقمين جمب نص رح ينطبعوا زي ما هما
        //ازا بدي اجمعهم بحطهم بين قوسين
        
        
        
        
        //control flow statement
        //(selection statement)
        /*
        if 
        else if 
        */
        
        //بدنا نعمل مثال ولاشرط يكون ازا الرقم موجب اطبعلي اياه
        
        System.out.print("Enter The Number:");
        int u=input.nextInt();
        if(u>0) 
            //System.out.println("The even number:"+u);
            System.out.println("Positive number");
        else
           // System.out.println("The odd number:"+u);
            System.out.println("Negative number");
        
        //وبدنا نعمل على نفس لارقم هل هو زوجي ام فردي
        if(u%2==0){
             System.out.println("Even");//لو حطينا هاي الجملة مع الشرط الثاني لازم يتحققو الشرطين مع بعط لحتى يتم طباعتهم
            if(u>10)
             System.out.println("and greathur than ten");
            else if(u<10)
                System.out.println("less than ten");
             //لو الرقم يساوي العشرة
            //بنستخدم ايلس ايف لباقي خيارات جملة ايف
            //او ايلس اف والاخير ايلس
            else //if(u==10)
                System.out.println("Equel ten");
        }
               
        else
        System.out.println("Odd");
        
        
        /*
        مثال على ايف ستيتمنت
        اطبع علامة الطالب 
        اذا كانت تسعين او اكبر اي
        تمنين او اكبر بي
        سبعين او اكبرسي
        يساوي ستين او اكبر دي
        والا فيل راسب
        */
        
  
        //ممكن نستخدم بدال الشرط
        //?:
        /*
         مثلا عندي متغير الاول اله قيمة
        ازا كان بساوي هاي القيمة زود على المتغير الاول واحد وخليه يساوي المتغير الثاني 
        اذا لا خلي المتغير الثاني يساوي خمسة
        
        int r=1;
        int z;
        if(r==1)
        z=2;
        else z=5;
        s.o.p(z)====2
        اختصاره في المثال تحت
        */
        int rr=1,z;
        z= rr==1?2:5;//ازا بدي اخزن في الزيد قيمة منطقية بخليه من نوع بوليين
        System.out.println("z="+z);
        
        //بقدر استخدم هاي الطريقة الشورت هاند
        //في مثال العلامات باستخدام ايف
        //بسمي متغير من وع استرينج بما اني هطبع داخله حرف اي اوبي الخ
        //وبحط كل شرط بعده علامة استفهام ثم حرفه الخ 
        //وبطبع حرف الار
        //هنلاقي نفس النتيجة
        
        //String s=(الشرط)?"A":...;//لازم يكون بالاخر قيمة الايلس//:"Pleas Enter Grade";
        
        
        
        //ازا بدي اشيك على متغير ما انه من نوع بيانات معين باستخدام
        //instanceof
        //ما بقدر استخدمه مع انواع البيانات البرميتيف الموجودين مسبقا في الجافا
        //بمعنى انه هل المتغير اوبجكت من نوع البيانات هذا
        //ولازم انا اكون معرفة المتغير مسبقا بسترينج والا ما بقدر اكتب امر الطباعة من الاصل
        String gg="noura";
        System.out.println(gg instanceof String);
        //عرفنا اوبجكت من سكنر سميناه انبوت
        System.out.println(input instanceof Scanner);
        
        
        
        //لادرس التاسع
        // Selection Statement (Switch Statements)
        
        /*
        switch( ){
             
        case 1:    ;break;
        case 2:    ;break;
        
        case
        //تحمل قيم ثابتة//حرف/ سترينج/ رقم
        //مش قيمة متغير ولا شرط
        //ممكن ننشئ عدد لا نهائي من الكيز ولكن كل كيز ينيك عن الاخرى ما بنفع تتكرر قيمتها
        //وكل الكيز يكونو نفس الداتا تايب
        
        }
        
        //نهاية كل كيز //;break;
        //لو توافق مع حالة معينة اللي في سوتش ينفذها وخلص
        //واذا بون البريك بنفذها وبروح عاللي بعدها
        
        //لو ما توافق اللي في سوتش مع الحالات 
        //ما بطبعلي اشي
        
        //لو بدي احكي للمستخدم اطبع هاي الجملة
        //لو كان مش من ضمن الحالات المطروحة
        //defule: 
        //ما بتحتاج بريك لانها بالاخر
        
        //وفي حالات بتكون مشتركة بطباعة جملة معين ما بحطلها بريك
        
        //switch
        //ما بتستقبل //float//double
        //لو في سويتش استخدمنا اكسبرشن
        //5/2
        //رح يعطيني الجزء الصحيح 2 ورح يهمل الجزء العشري
        
        
        */
        //مثال بالسويتش كالة حاسبة
        //اذا دخل * - + /
        //يعمل العملية علة رقمين\
        
        //char c=input.next().charAt(0); //'*' ..etc
        
        //داخل كل كيز بقدر استخدم البلوك
        //بقدر استخدم ايف استيتمنت
        //بقدر اكتب قد ما بدي جمل طباعة الخ
        
        
        //الدرس العاشر
        // Control Statement (While Loop)
        
        //while(True)===لازم تكون داخل الوايل بولين اكسبريشن نتيجتها يا صح يا غلط لحتى تتنفذ
        //count-=2;
        //في مثال الواي للوب ممكن نعمل الزيادة في الشرط
        //while(count++ <=5) //مثلا كاونت في البداية واحد  اقل من خمسة صح وبزيد الكاونت بصير تنين
        //داخل اللوب اطبع الكاونت رح يطبع تنين
        
        
        
        //مثال وايل لوب
        //ادخل مجموعة حروف الارقام تعتبر حروف او الرموز الخ
        //عند الحرف كيو اعمل ستوب للادخال
        //while(letter !=q)//هنا ازا حرف كيو دخلناه بعمل ستوب
        //  letter l=input.next().charAt(0);
        
        /*
        char l='a'; //نلاحظ انه لازم نعطي الال انيشال فاليو والا ايرور
     Scanner in=new Scanner(System.in);
     while(l !='q'){
        l=in.next().charAt(0);
     }//لو بدي المثال يحسب عدد الاحرف اللي انا دخلتهم
        */
        
        //المثال اللي فوق
        //count control while loop
        
        
        //لو بدنا ع نفس المثال
        //Flag control while loop
        //بتكون بين الوايل لوب قيمة ترو او فولس
        
        
        //الفلاج عبارة عن متغير بوليان يحمل قيمة ترو او فولس
        //بنحطه داخل الوايل وبنحط قيمته قبل ترو وداخل الوايل دخل حروف ومن خلال الايف استيتمنت اذا دخلت حرف كيو
        //اعمل قيمة الفلاج فولس وبالتالي بطلع برا اللوب وبحسب عدد أحرف الادخال
        /*
         Scanner input=new Scanner(System.in);
         char letter='a';
         int count=0;
         boolean flag=true;
         while (flag) {            
            letter=input.next().charAt(0);
            ++count;
            if(letter =='q')
                flag=false;
         }
         System.out.println("count="+count);
         }
        */
        
        
        //sentinel control wile loop
        //if(letter =='q') السينتينال فاليو اللقيمة الثابتة اذن الكيو بتكون مع الفاريبل المتغير في كل مرة
        
        //مثال
        //اعمل برنامج يدخل لعدد غير محدد من الدرجات ومن ثم
        //يحسب معدل هاي الدرجات
        
        
        
        //Do-while loop
        //هنا الفرق انه جملة الطباعة تتنفذ مرة واحدة على الاقل
        //سواء الشرط صح او لا
        
        //هنا الستركتشر الخاص بالدو وايل
        /*   
             int i=0;
             do{                 //تكتب الدو قبل البلوك
                 s.o.p("noura");
              ++i
             }while(i<=5);      //خارج البلوك بنكتب الشرط وبالنهاية سيميكولون
        */
        //رح ينفذ على الاقل مرة واحدة
        //ولكن عندما يصبح الشرط خطأ لا يرجع الى الدو وايل ويكمل تنفيذ البرنامج من بعده
        
        
        //الدو وايل تنفذ الامر اللي بداخلها مرة واحدة على الاقل
        //شو الفرق بينها وبين الوايل
        
        //في المثال اللي قبل كان بده عدد الاحرف اللي دخلتها
        //وممنوع يكون حرف الكيو
        //وحطيناه بمتغير وقبلحطينا قيمة بدائية للمتغير لحتى يقارنها مع الشرط
        //ولكن عند استخدام الدو وايل على السريع بنفذ امر ادخال بدون ما نحط قيمة بدائية
        
        
        
        //مثال على الدو وايل
        
        //اخذناه قبل
        //انه ندخل رقمين والعملية بينهم شو بدنا اياها ثم انفذها على هدول الرقمين
        //ولكن لو بدنا ندخل اكثر من رقمين
        //يعني قد ما بدي رقمين ثم رقمين
        //بالدو وايل
        
        //الشرط يكون انه العملية المدخلة من هدول
        //done
        
        
        //while===do-while
        //التنين نفس الكفائة ورح يأدوا نفس الغرض بس الفرق بسيط 
        
        
        
        //For loop
        
        //example
        //نطبع متغيرين الهم قيم من صفر لعشرة
        //واحد من صفر لعشرة والتاني من عشرة لصفر
        
        //بقدر استخدم متغيرين بنفس الفور لوب وشرططين وزيادة او نقصان لاكثر من متغير
        //الشرط رح يكون باستخدام اند
        //دن
        
        //مثال 
        //اي رقم بندخله
        //يتم حساب واحد على  واحد لعند واحد على الرقم
        
        //الحل من خلال السم
        //ولكن عشان يطلع الكسر مزبوط بحط للثابت اللي هو الواحد بحطه كسري
        //لواحد من الكسر بحوله لفلوت مش شرط لاواحد
        
        
        
        
        
        
        //Branching Statements ( Break/Continue ).
        //+ return بس رح ناخدها لما نتعامل مع الدوال
        
        //break وظيفتها الخروج من اي كونترول ستراكتر
        //continue بتعمل سكيب عند نقطة معينة //ولكن بتكمل اللوب
     
        
       /* 
        //example
        
        //مثال لو بدي اطبع عشر ارقام
        //ولكن عند الاربعة اوقف 
        //لو بدي اوقف وما اطبع الاربعة ولا حتى اكمل بستخدم البريك
        //اذا بدي اكمل من واحد لتلاتة ثم من خمسة لعشرة بستخدم الكونتنيو لشرط الاربع
        
        for (int t = 1; t <= 10; t++) {
            if(t==4) break; //continue
            System.out.println(t);
            
        
        */
       /*
       Example2
       
       في جملة الطباعة بدي اكتب مسألة رياضية قسمة وجمع وضرب معقدة شوي
       وبدي المستخدم يدخلي اجابة واذا صح يطبع اجابة صحيحة والعكس اذا كانت خطأ معي تلات محاولات
       والا الاجابة خاطئة
       
       بدنا نعمل متغير يوزر انسر باستخدام سكنر والمتغير التاني يحتوي على الاجابة الصحيحة
       ومن ثم اذا المستخدم دخل اجابة تساوي لمتغير الاجابة الصحيحة
       //هنا بنكون عاملين قبل متغير بوليان بنخزن فيه قيمة مبدأية فولس واذا الاجابة صح بنخزن ترو
       الخ
       ولكن خارج اللوب بنعمل جملة الايف لقيمة البوليان اذا صح اطبع اجابة صحيحة والعكس
       
       
       */
        /*
         System.out.println("Your Welcome!");
        System.out.println("Please,this answer for: 20+2*4/2");
        int userAnswer,Answer=24;
        boolean qusAnswer=false;
        Scanner input=new Scanner(System.in);
        //المستخدم معاه تلات محاولات يدخلهم
        for (int i = 1; i <= 3; i++) {
            userAnswer=input.nextInt();
            if(userAnswer==Answer){
                qusAnswer=true;
            break;
            } else if (userAnswer!=Answer){
              if(i==3) break;//or if(i==3) continue;//وما بنحط بالنهاية كونتنيو
                System.out.println("chance #"+(i+1)+":");
               continue;
            }
        }
        if(qusAnswer)//مش محتاج اكتب تساوي ترو
            System.out.println("Correct Answer");
        else System.out.println("Wrong Answer");
       */
        
        //بالنهاية ملاحظة انه البريك والكنتنيو 
        //ما بكونوا غير بجمل اللو
        //وما بكونوا بجمل الايف حتى الايلس ايف اللي زي اللوب ما بتعمل
        
        
        
        //16
        //Nested Loops
        //loop inside loop
   
        
        //اللوب لاخارجية بنسميها//Outer loop
        //اللوب الداخلية بنسميها//Nested loop
        
        //بدي أعمل مثال 
        //فيه لوب خارجيةبتتنفذ من واحد لخمسة
        //وكل رقم فيها بنفذ فاللوب الداخلية من واحد لتلاتة
       /*     for (int i = 1; i <6; i++) {
            System.out.println("Outer loop :"+i);
               for (int k = 0; k < 10; k++) {
                    System.out.println("Nested loop:"+k);
               }
        }*/ 
       
       //فالنهاية 
       //مش شرط نفس نوع الستيتمنت
       //يعني فور داخل فور ممكن فور داخل وايل داخلها دو وايل وهكذا
       
       
       //17
       //Branching Statements  بيانات التفريغ!
       //(Labeled Break / Labeled Continue)
        
       //البريك والكونتنيو اللي قبل ان ليباليد
       //الفرق
       //اللي قبل انه ما بنقدر نستخدمهم الا داخل السويتش او اي لووب اما الايف مثلا ما بنفع
       
       
       //لحتى أفعل بريك في جملة ايف بحط كل الجمل والايف داخل بلوك
       //وبسمي هذا البلوك باي اسم بدي اياه زي شروط المتغير وبحط جنبه نقطتين
       //وداخل الايف بروح عند بريك وجنبها بكتب اسم هذا البلوك اعملي ايقاف اله
       
       /*
        Hi :{
         if(5>6)
             System.out.println("Good job");
         break Hi;                          //كانه البريك بمثابة ايلس
         }
         System.out.println("Sorry,not good job");
       */
        
       
       //مثال
       //بدنا نعمل لوبين فور متداخلات
       //نطبع خمس نجوم جنب بعض عشر مرات
       
       //ولكن عند المرة الخامسة ما بدي اياه يكمل النجوم
       //حطينا داخل النيستاند لوب ايف اذا ساويت خمسة بريك
       //الجواب كان عند الخمسة عملت بريك وما طبعت النجوم وبعدين كمل طباعة باقي النجوم
       //لانه البريك بنفذ للبلوك اللي هوا فيه بس
       
       //!!!
       //بس احنا ما بدنا اياه يطبع باقي النجوم نهائي
       //بنروح بنحط كل اللوب داخل بلوك وبسميه وعند البريك بكتب اسم اللوب وبطلع منه نهائي
       
       //ممكن نحط اسم البلوكومسماه جنب البريك وبدون ما نحط البرانسيسيز اله
       //لانه باعتباره ليبل للفور لوب الخ
       
       /*
         Stop:
        for (int i = 1; i <= 10; i++) {
            for (int j = 0; j < 5; j++) {
                if(i==5)
                    break Stop;
                System.out.print("*");
            }
            System.out.println("");
        }
       */
        
          //مثال نطبع في اول سطر نجمة التاني نجمتين الثالث ثلاثة والرابع اربعة والخامس خمسة لعند العاشر
       /* for (int i = 1; i <= 10; i++) {
            for (int j = 1; j <=i; j++) {
                System.out.print("*");
            }
            System.out.println("");
        }*/
       //الحل باستخدام كونتنيو
       /*
       Hi: for (int i = 1; i < 10; i++) {
             System.out.println("");
            for (int j = 1; j <= 10; j++) {
                if(j>i) continue Hi;//بمثابة الايلس ازا صح هيعمل كونتنيو اي يرجع للوب اللي هو فيها وازا خطأ هيطبع نجمة
                System.out.print("*");
            }
            System.out.println("Line #1");
            //لو ما بدي تنطبع هاي الكلمة بعد كل سطر كيف؟
            //بعمل سكيب على كل البلوك من خلال تسمية البلوك وضع المسمى جنب الكنتنيو
            
        }
       //ممكن اسمي بلوك للوب داخلية واحدة واعمل بريك باستدعالء اسمها ويطلع منها وبس
    */
       
        
       
       //18
       // Method / Function Part1 //operation
       
       
       //بستخدم الدالة لو بدي اعمل شغلة معينة مكررة في المين
       //بنفذها داخل الميثود وبستدعيه وين ما بدي داخل المين
       
       //اذا عملت دالة وكانت ستتيك
       //بقدر استدعيها باسمها وبس بدون ما اعمل اوبجكت
       //ومعنى الببليك في الميثود
       //انه بقدر استخدم هاي الدالة باي فايل داخل الاوبجكت
       
       
       //مثال
       //بدي برنامج يعرف رقمين صحيحات ومن ثم يجيب ناتج جمع الرقمين
       
       //لو بدي انفذه من خلال المين بشكل عادي من خلال سكنر الخ
       //طيب لو بدي كزا مرة في المين اجمع رقمين
       //اصبح جمع لرقمين مكرر فكل مرة بنروح بنعمل ميثود بترجعلي ناتج جمع الرقمين
       /*
        public static double setSum(double n1,double n2){
       double sum=n1+n2;
       return sum;   //او بسطر واحد نكتب// return n1+n2;
       }
       */
      //القيمة المرجعة  نستقبلها من خلال جملة الطباعة
      //او من خلال لما نستدعي الدالة باسمها نخزنها في متغير ومن خلال جملة الطباعة نطبع هذا المتغير
      //والحالة هاي بنستفيد منها لما بدنا نزود علامتين على اي علامتين بندخلهم بناخد المتغير بعد ما نخزن اسم الدالة مع العلامتين وبنعطيه علامتين
      //بتفيدنا هاي الشغلة يعني
      
      
      //لما تكون الدالة فويد
      //ميعني ما في قيمة مرجعة 
      //ولكن بامكاني استخدم كلمة ريتين لحالها 
      //وبكون معناها يعني توقف عن تنفيذ ما بعدها اي جملة بعدها في الدالة ما بتتطبعها وحتى بتعمل عليها ايرور
      //بس بشو بنستفيد منها
      //ب جملة ايف  اذا ترو توقف مثلا وال اطبع والعكس
      
      
      //19 example
      
      /*
        //دالة تجيبلي اصغر رقم من بين ثلاثة ارقام
   public static int SmallNum(int n1,int n2,int n3){
       int small=n1;
       //if(n1<n2 && n1<n3) small=n1;
      //else if (n2<n1 && n2<n3) small=n2;
       //else small=n3;
         //  return small;
       if(small>n2)
           small=n2;
       if(small>n3)
           small=n3;
       return small;
   }
      */
       
        
        
      /*
        //لو بدي ابعت عدد غير معلوم من الاعداد يعملي جمع الهم
        //بنبعت مع المتغير ثلاثة دوت
        public static double sum(double...n){
            //في هاي الحالة كل الارقام اللي دخلتها رح تكون مخزنة في المتغير ان وهو هيكون عبارة عن اري
            //وعشان اجمع الرقم الاول مع التاني لعند اخر رقم نخزنه بحتاج لوووب
            //وهاي اللوب نسميها
            //for each
            double sum=0;
            for (double i :n) {//نقطتين ثم المتغير هاي الحالة بنستخدمها فالاري فقط
                //هاي الاري رح تلف بالحجم الخاص بالان
                sum+=i;
            }
            return sum ;
        }
      */
        
        
     //   #020 [JAVA] - Built in Method / Function
      
     //انواع الميثود
     //java number method
     //java string method
     //java character method
     //java array method
     
     
    //class number //  اشهر كلاس للتعامل مع النبر اسمه//math class
    //هذا الكلاس داخل باكيج اسمه لانج // java.lang.Math
    
    //class Math
    //رح نلاقي داخله البيلت ان ميثود داخل الكلاس
    //دوال كثير بس رح ندرس المتعارف عليه
    //static double
    //static int
    //static float
        
    //مقابل كل  اللي فوق مجموعة من الدوال
    //دالة بترجعلي القيمة المطلقةابسليوت فاليو//abs(int n1//or double n1....etc
    //دالة بتحسبلي اعلى قيمة//max(....
    //اقل قيمة//min(.......
    
    
    
    //بس فالاعلى بدي استدعي باستخدام ايمبورت 
    //الباكج الكلاس الماث فيه
    //import java.lang.Math;//ما لها لزوم لو بدي عطول بكتب اسم الكلاس ماث ثم باستخدم اي دالة بدي اياها بدون هاي الجملة
    //بقدر استخدم كل دوال الكلاس الماث بدون ما استخدم جملة ايمبورت
    //بكتب اسم الكلاس ماث ثم دوت وبعطيني كل الدوال اللي فيه
    
    //بقدر اعمل هيك لما اكون معرف الباكج نفسه ستاتيك
    //ولال بعمل اوبجكت للماث ثم باستخدمه لحتى استدعي الدوالل اللي بكلاس ماث
    
    
   //وبستخدم اي دالة باسبكتابة ماث دوت اسم الدالة
   //ولكن ازا بدي استخدم الدالة مباشرة بدون ما استدعي اسم الكلاس اي الماث بكتب
   //import static java.lang.Math.abs;
   //ستاتيك معروف انه وجودها بخليني استخدم الدالة مباشرة
   
   //طب لو بدي استخدم كزا دالة في كلاس الماث 
   //بحط جنب اسم الكلاس ستار وهيك بقدر استخدم جميع الدوال اللي فيه
   //import static java.lang.Math.*;
        
   //method====>ceil
   //هاي الدالة بتعطيني اكبر عدد صحيح
   //ceil(-1.2)=== -1  //ceil(1.2)====== 2
   //metho=====>floor
   //عكس السيل بتعطي الرقم الاصغر
   //floor(-1.2)== -2  //floor(1.2)======= 1
        
        
   //method====> round()     
   //بتعمل تقريب للرقم
   //round(1.8)====2  (1.2)====2
   //round(2.4911111)===2
   //round(2.5)===3
   
   
   //method==== random()//the return value //0.0 <1.0
   //هاي الدالة بتعطي رقم عشوائي وبتكون بدون باراميترٍ
   
   
   
   
   //سجوير روت
   //sqrt( ) //بتجيب الجذر لاي رقم
   
   
   //cos()
   //sin()
   //tan()
   
   //exp()//دالة اكسبرنشال//بطلع عدد معين لاي رقم!!!!!!!!!!!!!
   
   //log()
   //log10()
   //هاي الدوال بطلعلي اللوغاريتم
   
   
   
   //الباور الباراميتر الول العدد والثاني اس لهذا العدد
   //pow(4,2)=======8
   
   //لو عندي تلات قيم وبدي احسب اعلى قيمة الهم باستخدام دالة ماكس
   //اولا دالة ماكس بتستقبل رقمين فقط
   //وبالتالي بدي استخدم دالة مالكس الرقم الاول عبارة عن دالة ماكس للقيمتين والباراميتر الثاني الرقم الثالث
   //وممكن بين اربع ارقام
   //بعمل دالة ماكس ثالثة داخل الدالة الداخلية !!!!
   
   //وممكن استخدم دوال مختلفة داخل بعض

   
   //بالبحث بطلعلي كبشة دوال
   
   //لو بدنا نبحث عن لاميثود اللي بتتعامل مع سترينج
   //بنبحث عن الباكج اللي اسمه لانج عن اي ميثود بتتعامل مع النص
   //class String
   
   //chartAt(int inside )//كانت تجيبلنا اول حر فمن السترينج  اللي بنبعته
   
   //copmpareTo (String anathor string)
   
   //concat(string s)
   //بتعمل دمج سترينج مع اخر
   
   //equale() هل السترينجز ايكول لبعض ولا لا
   
   //substring() يقسم السترينج
   
   
   //toLowerCase()
   //toUpperCase()
   
   
   ////////////////////////////////////////
   //ممكن نبحث عن كلاس الشاراكتر شو ممكن يوفر ميثود
   
   
   
   //21
   // Overloading Method / Functio
   
   //انه اكثر من ميثود نفس الاسم ولكن الباراميتار اللي بتقبلها الميثود عبارة عن
   //السينيجتشار مختلف
   //من دالة لاخرى لازم لما يكونوا نفس الاسم سواء بالعدد نغير او النوع
   //done
   
   
   //مثال
   //لما يكون عندي تطبيق خاص بتوصيل الطلبات
   //بعمل دوال نفس الاسم اوردر
   //الاولى بترجعلي الطلب
   //التانية الطلب مع سعر التوصيل
   //الثالثة الطلب مع سعر التوصيل مع سترينج ازا استخدم كود الخصم بخصم من السعر 2
   
   //رح نتعمق في هذا الشيئ فالبرمجة الشيئية
   //فالبوليمورفزم
   //اي تعدد الاشكال
   
   
   
   
   //ممكن نعمل اوفر لودينج لدالة المين نفسها
   //ولكن اللي رح يتم تنفيذ الستيتمن داخلها
   //لحظة تنفيذ البرنامج
   //اللي بتحمل باراميتر سترينج للاري
   
   
   
   
   
   //22
   //Recursive Methods Part1//استدعاء ذاتي 
   //عملية بتسنمح للميثود تستدعي نفسها من نفسها بشكل مستمر
   
    //الريكورجن نوجد لحتى نقسم الحل وبالنهاية نجمع الحلول لنطلع لسليوشن
     //رح نباش تجميع الحلول من الاسفل للاعلى
    
    //وانا ببني بدالة بتستدعي نفسها
   //لازم اخد بعين الاعتبار//base case ====condetion
   //اي شو هو الشرط الي اذا تحقق رح يوقف تنفيذ هاي الفانكشن
   //والا الستاك بوصل لمرحلة اوفر فلو والنتيجة ايرور بعد ما يطبع مجموعة نتائج
  
   /*
   fun(){
   s.o.p("hi");
   fun; //هنا استدعينا الميثود نفسها داخلها
   //رح يضل يطبع هاي لعند ما المومري يمتلئ بيطلع ايرور
   //كأنها انفنتي لوب
   }
   */
   
   //كيف اتخلص من الخطأ
   //من خلال الايف استيتمنت
   //او سويتش ستميتمنت
   
   //مثال
   //دالة بتطبع كلمة هاي خمس مرات باستدعاء نفسها
   
   /*
     public static  int count=0;
    public static void fun(){
        if (count==5) {
            return;//معروف ريترن لحالها بتوقف تنفيذ الدالة
        }
        count++;
        System.out.println("hi");
        fun();
    }
   */
   
   
   //مثال ناتج مضروب العدد
   //باستخدام ريكيرجان ميثود
   
   //بما انه ريكارجن
   //لازم نستخدم بيز كيز اي شرط معين بنهي تنفيذ العملية
   
   //مضروب الواحد واحد
   //بنقول اذا العدد اللي اعطيناه للدالة يساوي واحد اذن ريترن
   //ومضروب الزيرو واحد
   
   //الريكورجن نوجد لحتى نقسم الحل وبالنهاية نجمع الحلول لنطلع لسليوشن
   //رح نباش تجميع الحلول من الاسفل للاعلى
   
   //في هذا المثال وصلنا للبيس كيس اللي هو الواحد وجمعنا الحلول من اسفل لاعلى
   
   //answer::
    /*
   public static int fact(int n){/*
        Scanner input=new Scanner (System.in);
        System.out.println("Please,Enter the number:");
        int num=input.nextInt();
        int fact=1;
        for (int i = 2; i <=num; i++) {
            fact*=i;
        }
        return fact;
   ________________________________________________________________________________________
   هذا الحل الصح بما انه بنستخدم مفهوم الريكرجن
        if(n==1||n==0)
            return 1;
        else
            return n*fact(n-1);//مثلا بدي ابعت للدالة خمسة شو الناتج طبعا بنقسم الحلول وبنجمعهم وبنعطي الناتج
                   5*fact(4)
                      4*fact(3)//24
                          3*fact(2)//مضروب التلاتة يساوي تلاتة مضروب التنين يعني 6
                              2*fact(1)//مضروب التنين تنين ضرب واحد
                                   1 //من خلال استخدام هاي الدالة الريترن لمضروب الواحد واحد
    }*/
    
    
    //اوقات بتم الطباعة مباشرة  ومن ثم استدعاء للميثود وهكذا
    //واحيانا بتتقسم الحلول وبنجمعها من الاسفل للاعلى كالامثلة كالتالي
    
    /*
     public static void fact(int n){
     if(n==0)
            return ;
        else
            System.out.println("#"+n);
             fact(n-1);
    //مثلا للخمسة 
    // #5
       #4
       #3
       #2
       #1
    }
    */
    
    //طب لو بدنا الطباعة للارقام بالعكس
   /*
     public static void fact(int n){
     if(n==0)
            return ;
        else
            fact(n-1);
    //بنلاحظ هنا الفكرة لو اعطينا هاي الدالة خمسة مثلا
               fact(5)  
                
               fact(4)
               fact(3)
               fact(2)
               fact(1) //بما انه في الريكيرجن بنجمع الحلول من الاسفل للاعلى رح تنطبع اول اشي واخر اشي الخمسة
               fact(0)//return;
    //وكل هدول من وين اجوا من الفاكت خمسة عشان هيك حطيناها بالاول
            System.out.println("#"+n);
            
    //مثلا للخمسة 
    // #1
       #2
       #3
       #4
       #5
    }*/
    
    
   
   //الريكرجن ميثود نوعان
   //direct recursion
   //الدالة بتستدعي نفسها
   //indirect recursion
   //الدالة بتستدعي دالة اخرى 
    
   
   //فوائد الريكيرجن
   //انه المشكلات اللي بنقدر نحلها باللوب بنقدر نحلها فيها
   //اما السلبيات لها
   //بتحتاج لسبيس اكثر اضافة بتحتاج لوقت اكبر من اللوبس كونه بتم استدعاء الدالة بكثرة
   //ممكن نستخدم الريكيرجن ويكون وقته اقل
   
   
   //23
   //example Febonacci series
   //اللي هو البيس كيز صفر وواحد بعدهم كل رقم يساوي مجموع الرقمين اللي قبل
   
   //الحل المجرد لسلسلة فيبوانشي
   /*
    //فيبوناشي
        int x=0,y=1;
        System.out.print(x+" "+y);
        for (int i = 2; i<10; i++) {
            int next=x+y;
            System.out.print(" "+next);
            x=y;
            y=next;
        }
   */
   //بدنا نحل فيبوناشي بالريكيرجن
  
         
    /*
           0 1 2 3 4 5 6 7  8  9  10 ...etc
           0 1 1 2 3 5 8 13 21 34 55 ...etc
    */
     /*  public static int fib(int n){//5
        if(n==0||n==1)
            return n;
        else
            return fib(n-1)+fib(n-2);
         //3 +2       //fib(4)                    +             //2  fib(3)
        //2  +1       //fib(3)               +fib(2)        //1   +1    fib(2)        +fib(1)
       //1  +1        //fib(2)+ fib(1)      fib(1)+fib(0)       fib(1)+fib(0) 
       //0+1     //fib(1)+fib(0)//هنا وصلنا للبيس كيس خلصنا
        
        //الناتج خمسة
        //زي هيك بنفكك الحل لعند وصولنا للبيس كيس ومن ثم بنجمع النواتج من اسفل لاعلى
        //واحنا بنفكك الفيب اما سطر سطر
        //او بنخلص كل الليفت ثم الرايت
        
   */
    
     
     //موضوع الريكيرجن بده مراجعة
     //وممكن نستبدله باللوب
     //وبستخدم غالبا في بناء الخوارزميات الخ
     
     
     
     //__________________________________________________
     //Arrays
     //One Dimensional Arrays (1D Array)
     
     //مثلا البوستات فيء اي موقع تواصل
     //كلها بتكون مخزنة في داتا ستراكتشر بنسميها الاريي
     
     //array is
     //container object //حاوية من الاوبجكت
     //بطل متغير عادي مثلا البوست ما فيه نوع بيانات محددة اذن بطل عادي المتغير وسميناه اوبجكت
     //الها //fixed number
     //عدد معلوم من البيانات المخزنة 
     //اضافة الى انها كلها لازم تكون من نفس النوع
     
     //ممكن البوست يحمل فليكسابل اريي اي ممكن اضيف عليها عناصر اكثر
     
     
     //new
     //وظيفته يحجز اماكن في المومري
     
     int n[]=new int[5];
     
     //array == 0 base 
     //اي اول عنصر رح يبلش من الصفر
     //0=== index
     //او عنوان  المتغير الموجود بالمكان الاول
     
     
     //ممنوع اتعدى حجم الاري واخزن فيها بيانات
     //يظهر الخطأ اثناء لاتنفيذ
     //ايكسبشن انه تعديت حجم الاري
     
     
     
     //ممكن اعرف الاري بهاي الطريقة
     int []rt;
     rt=new int[3];
    
     
     
     //لازم احدد حجم الاري والا ايرور
     //وممكن نعمل انلايزيشن قيم مبدأية نعطيها مباشرة للاري
     int no[]={10,20,30};
     no[1]=15;
        System.out.println(no[1]);//15
        
    //الاري ممكن تستقبل نوعين من الداتا
    //premetive data type //int..float....etc
    //non-premetive     //مش موجود باللغة انا بنشئ هذا النوع وبعد هيك ممكن اعرف منه اري
    //مثلا post n[]=new int[9];======erorr post not found
    //بروح بعمل لبوست كلاس وبنشئ منه الاري
    
    
    //اذا حجزنا اري بحجم معين
    //by defalt 0
    //رح تكون القيم المبدأية زيرو0
    
   //boolean
   //by defalt ==false
   
   //char ||String
   //by defalt ==null
   
    String jm[]={"Ali","Ahmed","Soha"}; 
    //بدي امر على هاي العناصر واطبعهم بالفور ايتش
        for (String i:jm) {
            System.out.println(i);
        }
     //رح تتوقف حسب حجم الاري ضمنيا
     //<jm.lenght
     
     //size for array===should be (int) 
     //or short=====وهذا حديثا صار
     
     short size=15;
     int hor[]=new int[size];
     
     //في امثلة الاري
     //بعض الملاحظات 
     
     //في مثال نفحص عن رقم معين هل موجود بالاري
     /*
     كان الحل انه نعمل جملة ايف اذا بساويه العنصر الموجود بالاري هذا الرقم بنعمل بريك 
     اضافة بنجعل قيمة معينة احنا معرفينها قبل فولس نوعها بولين طبعا7
     وقبل ما يعمل بريك بنحط القيمة هاي ترو 
     وبعد ما يطلع من هاي الايف بروح لايف تانية اذا كانت هاي القيمة يعني ترو
     اطبع انه الرقم اللي بندور عليه موجود واذا لا غير موجود
     */
     
     //في مثال تاني نطبع اعلى قيمة واقل قيمة
     /*
     ممكن في نفس الفور ايف لاعلى قيمة ولاقل قيمة
     او بنعمل دالة وحدة ما بترجع قيمة بس من خلالها بتعطي جملتين طباعة لاعلى ولاقل قيمة
     قبل كنت عاملة دالة لكل وحدة
     */
     
     ////
     ///////////////////////////
     //ملاحظة مهمة جدا وهي لما بدي مثلا اعمل شغلة بخصوص عناصر الاري يوجد دوال جاهزة
     //مثلا بدي ارتب عناصر الاري تصاعديا
     //بكتب كلمة اري ثم //Alt+enter
     //بظهرلي هذا السطر وبختاره
     //import java.util.Arrays;
     //بخليني استخدم الدوال الخاصة بالاري
     //بعد مكتب كلمة اري بحط دوت وبتظهر الدوال الخاصة
     //Array. وبختار الكائن مثلا لاني بعمل اري وبحط العناصر الى اخره
     //وبكتب بالداخل اسم الاري اللي عملتها
     //بعدين لو وبطبع العناصر اللي داخل المصفوفة والنتيجة هيعطيني العناصر مرتبة
     
     
     
     //26
     //One Dimensional Array (Char Array)
     
     
     //لما نيجي نطبع جميع عناصر الاري من نوع تشار
     //بقدر اطبعهم مباشرة من امر طباعة
     //ما بحتاج اعمل لوب
     
     /*
         char pk[]=new char[5];
         pk[0]='h';
         pk[1]='e';
         pk[2]='l';
         pk[3]='l';
         pk[4]='o';
         System.out.println(pk);//hello
     
         او بدل الكود اللي فوق نكتب الكلمة مباشرة انشالايز
         char pk[]={'h',e'l','l','o'};
        System.out.println(pk);//hello
     */
     
     //ولو حطينا ارقام رح يطبع احرف المقابلة لهاي الارقام
     //كل حرف ممثل بالديسيمال اللي هي الارقام العادية
     //والهيكسي ديسيمال الخ
     // او اسك كود خاص فيه//ASCH
     
     //s.o.p((char)66)============B
     
     
     
     //مثال
     //لو بدنا نخزن مجموعة من الاحرف يدخله المستخدم
     //بنستدعي اري الاحرف
     //next().toCharArray();
     //ثم جملة الطباعة لهاي الاري
     /*
     Scanner inp=new Scanner(System.in);
     
      char aa[]=new char[2];
      aa=inp.nextLine().toCharArray(); //لو حطينا نيكس لحالها رح يطبع النص اللي قبل السبيس وبس
      System.out.println(aa);
     */
     
     
     //في طريقة اخرى
     //انه بعرفه سترينج
     //بعدين بحولوه للاري استراكتار
     
     
     char arr[]={'B','D','C','A'};
     Arrays.sort(arr);
     System.out.println(arr);
     
     //char arr[]={'a','C','A'};=======//ACa
     
     //ممكن انسخ العناصر الموجودة باري الكاراكتر داخل سترينج
     String sos=new String(arr,0,2);//يعني العناصر الموجودة بالاري من العنصر الاول واطبعلي عنصرين//الرقم التاني بعني عدد العناصر اللي رح يطبعهم
     //اما لو كتبنا من الصفر لاربعة رح يطبع كل العناصر هنا
        System.out.println(sos);//AB  //0,4===ABCD
        
     //لو بدنا من عند العنصر الاول لثاني 
     //بنبدا من رقم الاندكس للعنصر
     //1,2=====BC  //تنين تعني عدد العناصر اللي رح يطبعهم
     
     
     
     //سؤال ليش استخدمنا اري شار 
     //مع انه سترينج عطول وخلص
     //الشار اكثر امان من السترينج من حيث تخزين البيانات فالمومري
     //كلمة السر بتتخزن على المومري باستخدام الاري ولما تكون بسترينج بتكون بالمومري على شكل دام
     //وبسهل الوصول الها
     //اما من خلال اري تشار بنعمللها تشفير ومن الصعب الوصول الها
     //ومن ناحية المساحة الشار اقل
     
     
     
     
     
     
     
    //27
    //Passing Arrays to MethodS
    
    //ممكن ابعت باراميتر لاسم الميثود اللي بتعمل عملية للاري
    //هذا الباراميتر عبارة عن اري لا تحتوي على ميثود
    
   /* 
   //int y[]=new int[]{5,2,3};
    printSortArray(new int[]{5,2,3});//طبعا بدون السطر اللي قبل يعني مش محتاج نعرف اري
     */
     
     
  //مثال
  /*
    //دالة بتطبع عناصر اري معينة وحددة عناصرها
    //بنعملها بدون ما نعمل براميتر اري بنحط القيم مباشرة بالريتين 
    //اي دون اسم دالة
    public static int [] print(){
        return new int[]{2,3,4};
    }
  //اكيد ممكن اعملها بطريقة مغيرة انها فويد
  وبندخل عليها ارجمنت يعني هي ببراميتر الاري
  ونعمل جملة طباعة داخل لوب بطبع عناصر الاري
  */
  //لو بدي اطبعهم مباشرة داخل المين بعطيني عناوين البيانات 
  //لازم اخزنهم فاري انا بنشئها داخل المين ثم من خلال اللوب بطبعهم
  /*
        int sop[]=print();
        for (int i = 0; i < sop.length; i++) {
        System.out.print(sop[i]);     //وممكن من خلال الاري اللي خزنا فيها قيم الاري اللي بالدالة نطبع اي عنصر معين بدنا اياه بنحط رقم الاندكس فيها
        }
        System.out.println("");
  */
     
  
  //الريفيرانس
  //يعني متغيرين او اكثر بكون الهم نفس المومري في الذاكرة
  
  //مثال 
  
  int uy[]={1,2,3};
  int sy[]={40,50,60};
  uy=sy;
  sy[0]=100;//بعد ما خزنا عناصرها في الاول غيرنا على عناصرها
  System.out.println(uy[0]);//output=100
     //ارجعنا طبعنا العناصر المخزنة في الاري الاولى لاقينا كمان تغير عليهم
     //شو السبب
     //لما ساوينا الاري مع بعض
     //كانه خليناهم ريفيرانس لبعض في المومري
     //يعني التنين بأشروا على نفس المكان في الذاكرة
     //اي وجهين لعملة واحدة اي تغير لواحد بصير على التاني
     
     
     //الاري
     //call by referance
     
     //على عكس الفاليو
     //call by value
     /*
        في مثال انشأنا فيه باراميتر اري وخليناها تحط في الموقع الاول قيمة معين
        لما استدعينا هاي الدالة وحطينا فيها اري احنا انشأناها وطبعنا الموقع الاول مثلا لقيناه متغير نفس اللي بالدالة
         اعتبر انهم نفس العنوان
     
        اما لو عملنا نفس الاشي بس لمتغير
     رح يطبع قيمة المتغير اللي فالمين 
     لانه في الذاكرة كل واحد اله عنوان مختلف
     */
     
     //وممكن نساوي اكثر من دالتين مع بعض
     //بنلاقيهم نفس الريفرانس في المومري
     //والسلااااااااااااااااااااااام
     
     
     //28
     //Multidimensional Arrays & Passing Multidimensional Arrays to Methods
     //two dimential array
     
     //ممكن نحتاج انا نخزن بيانات على شكل جدول
     //هنا ياتي دور تو دايمينشيال اري
     //مكونة من عمود ومن صف
     
     //شكلها
     int [][]saw=new int[4][];
     //السيكور باكت الاولى خاصة بعدد الصفوف
     //row
     //وما بنفع تكون فاضية لازم نحددها والا ايرور
     //السيكور باكت  التانية لعدد الاعمدة 
     //col
     //ممكن نحددها في تعريف الدالة
     //او ممكن نحدد لكل صف اكم عمود
     
     saw[0]=new int[4];//الصف الاول في اربع عمدان      saw[0]=new int[4];
     saw[1]=new int[3];
     saw[2]=new int[2];
     saw[3]=new int[1];
     
     //بالطريقة هاي بنوصل لكل موقع
     //بدنا نضع قيم انشالايزيشن
     //عن طريق اوصل لكل خلية
     //ciel=====خلية
     
      saw[0][0]=67;
      saw[0][1]=55;
      saw[0][2]=80;
      saw[0][3]=67;
       
      saw[1][0]=88;
      saw[1][1]=57;
      saw[1][2]=82;
     
       
           //etc...saw[4][0]=...
     
           //ممكن نخزن القيم مباشرة بهاي الطريقة
           int [][]naw=new int[][]{
           {55,66,77,100},  
           {54,66,78},
           {77,88},
           {92},
           };
           //اختصار عن الطريقة اللي فوق
           //...
           //..
           //وهي كمان اختصار اللي فوق بس للتوضيح
            int [][]raw={{55,66,77,100},{54,66,78},{77,88}, {92}};
     
     
        /////////
        //كيف بدي اوصل للبيانات اللي بداخل الاري من نوع مالتي دلايمينشال نوع تةو اري ممكن يكون ثري اري الخ
        
        
        //raw.lenght====بعطيني عدد الصفوف
        //raw[0].lenght===بعطيني عدد الكولم بهذا الصف اي عدد العناصر فيه
        
        System.out.println(raw.length);//4
        System.out.println(raw[1].length);//3
     
        //طيب لما بدي اطبع كل البيانات مرة وحدة
        for (int row = 0; row < raw.length; row++) {
            for (int col = 0; col < raw[row].length; col++) {
                System.out.print(raw[row][col]+" ");
            }System.out.println("");
        }
       
     //ممكن نمر على العناصر بالفور ايتش //نبحث عنها انا كسلت اكتبها//في الدقيقة عشرين درس تمانية وعشرين
     //وممكن بالفور كلاسيك زي ما حلينا فوق
     
     
     //مثال 
     //نعمل ترانسفير نقلب الاعمدة صفوف والصفوف اعمدة
    
      /*           int asad[][]={
         {1,2,3},
         {10,20,30}    
     };
        for (int i = 0; i <3; i++) {
            for (int k = 0; k <2; k++) {
                System.out.print(asad[k][i]+" ");
            }System.out.println("");
        }
        arrayPrint(asad);
    */
    
     //مثال
     //نعمل ميثود بتطبعلي عناصر تو دايمينشال اري
     /*
          public static void arrayPrint(int [][]array){
       for (int i = 0; i <array.length; i++) {
           for (int j = 0; j <array[i].length; j++) {
                  System.out.print(array[i][j]+" ");
           }System.out.println("");
       }
   }
     */
    
     
     
     
     
     //29
     //String & Array String
     //class String 
     
     //Last basics..
     
     String sp="ABC";//= new String("ABC"); //رح نخزنه بالطريقة هاي عشان لقدام هناخد كلاس وننشئ منه اوبجكت
        System.out.println(sp);//ABC
     
     //بنتعامل مع السترينج بطريقتين
     //اري اوف كاراكتر
     //او السترينج مباشرة
     
     //رح نتعلم السترينج لانه سهلة في التعريف
     //ورح استفيد من الفانكشن الموجودة بالسترينج
     
     //بنكتب اسم متغير السترينج وجانبه نقطة رح استفيد كل الدوال رح تظهر الخاصةبالسترينج
     //اسم المتغير او الاوبجكت اللي بدي اعرفه من السترينج
     
     
     //مثال
     //بعد ما اجرينا عمليات على النص اللي عرفناه
     //بدنا نضيفله كمان نص
     
     //عن طريق ميثود كونتاك
     
     
     //الدالة الاولى اللي بتدمج نصين
     //concat
     
       sp=sp.concat(",I am Noura");//لو ما خزنا استدعاء الدالة في اسم المتغير ما رح يتغير على النص اي شئ
       /*
       ممكن نضيف النص بدون استخدام دالة الكونتاكينيت
       sp=sp+(",I am Noura");
       */
        System.out.println(sp);
     
     //اذا كان عنا متغيرين سترينج والتنين بخزنوا نفس النص
     //التنين رح يكونوا يأشروا على نفس المكان في الذاكرة
    String n20="noura";
    String n40="noura";
     //ولكن مش كول باي ريفيرنس انه ازا عدلت النص ع وحدة بتعدل على التاني
     
     
     
     //الدالة التانية
     //compareTo();
        /*
          s1>s2= +num
          s1<s2= -num
          s1=s2= 0
     */
     String s1="NOURAD";//D=68  s.o.p((int)'D');
     String s2="NOURAe";//e=101
        System.out.println(s1.compareTo(s2));//-33
     //هاي الدالة رح تمر على كل حرف بالنص لكل من المتغير وتقارنهم
     //في اختلاف باخر حرف هنا
     //بنشوف الاسك كود لكل منهم وبناء على ارقاممهم بتعطي الناتج
     
     //لو كان اول حرف مختلف
     //الناتج بالمقارنة رح يكون اله
     //هو اول حرفين يلاقيهم مختلفين رح يعمل عملية المقارنة عليهم
     
     
     //الميثود الثالثة
     //trim()
     //بتلغي السبيس الموجودة داخل النص
     
     String noura="   Hi   everyone";
        System.out.println(noura.trim());//Hi   everyone
        
        
    //الميثود الرابعة
    //toUpperCase()
    //toLowerCase()    
     
     String ali="HELLO EVERYONE";
     String soad="helo gues";
        System.out.println(ali.toLowerCase());//hello everyone
        System.out.println(soad.toUpperCase());//HELLO GUES
        
        
        
   //الميثود الخامسة
   //valueOf()
   //String.valueOf(القيمة اللي بدنا نخليها ك سترينج);
   
   //ازا بدي اسند قيمة بنوع اي متغير لمتغير سترينج من خلال هاي الدالة
   int pop=10;
   String soq=String.valueOf(pop);
        System.out.println(soq);//10
        
        //ممكن اكتب المتغير كنص بطريقة اخرى
        String sod=pop+"";
        System.out.println(soq);//10
        
        
        
    //الميثود السادسة
    //equles()    
    //لما بدي اقارن نصين مع بعض
    //وبدي اعرف هل بساووا بعض ولا لا\
   
   String g="hello";
   String d="hello";
        System.out.println(g == d);//true
        //هنا النصين نفس القيمة ونفس الادرس
        
        //هنا النيو بتعطي لكل متغير عنوان مختلف
        //حتى لو كان الهم نفس الفاليو
        //ولكن لو خزنا النصين على شكل اوبجكت 
        //رح يطبع فولس
        String aa=new String("hello");
        String bb=new String("hello");
        System.out.println(aa == bb);//fals
        //لانه في ءهاي الحالة بقارن وبسأل عن عناوينهم هل بيساووا بعض
        //ما بسألة عن القيمة للنصوص
        
        //ازا بدنا ياه يسأل عن قيمة النصوص
        //بنستخدم الدالة السادسة
        //equle
        System.out.println(aa.equals(d));//true
        
        
        //ممكن نقارن متغير مخزن فيه نص بنص مباشرة مش مخزن بمكان
        //من خلال المتغير دوت ايكوال وبنحط بدخلها القيمة اي النص اللي بدنا نقارنه مع هذا المتغير
        System.out.println(aa.equals("hello"));//true
        
        
        System.out.println(aa=="hello");//false
        //عشان هيك فالاوبجكت نتعامل مه ميثود ايكوالز
        
        
        //اما ازا ساوينا الاوبجكت مع بعض واستخدمنا ايكوال ايكوال العادية رح يطبع ترو بالتاكيد
        aa=bb;
         System.out.println(aa == bb);//true
         
         
         
         
       //الدالة السابعة
       //equlesIgnoreCase()
       
       //بتحددلي اذا النصين بساووا بعض
       //بغض النظر ازا كانوا مختلفين من ناحية حالة الحرف
       //كبير او صغير المهم هما هما الاحرف
       
       String hal="HI";
       String llo="hi";
        System.out.println(hal.equalsIgnoreCase(llo));//true
        
        
        //الدالة الثامنة
        //replace(النص اللي بدي استبدله,الجزء اللي بده يعوض بدل هذا النص)
        //ممكن استبدل حرف باخر..الخ
        
        
        String joj="Hello world Noura";
        System.out.println(joj.replace("Noura","Everyone"));
        
       
        
        //الدالة التاسعة
        //contains(النص اللي بتحبث عنه)
        //هاي الدالة بتبحث عن نص هل موجود بالنص اللي مخزنينه بمتغير
        System.out.println(joj.contains("Noura"));//true
        
        //هاي الدالة بتستقبل سيكوانس من الكاراكتر مش سينجل شاراكتر
        //عشان هي الحرف بنحطه بين دبل كوتيشن
        
        
        
        
        //الدالة العاشرة
        //endWith(رح يسال هل هذا الحرف او الكلمة موجودة بالاخر)
        
        
        System.out.println(joj.endsWith("a"));//true
        System.out.println(joj.endsWith("Noura"));//true
        System.out.println(joj.endsWith("hello"));//false
        
        
        //الدالة الحادي عشر
       //startWith() عكس اللي قبل
       
       
       
       //الدالة الثانية عشر
       //substring(index num)
       
       //بنبعتله رقم الاندكس للحرف وبطبع السلسلة من عنه لباقي النص
       //الاندكس لانه السترينج عبارة عن اري اوف كاراكتر
       
        String kiko="HelloSharaf";
        System.out.println(kiko.substring(3));//loSharaf
        System.out.println(kiko.substring(1, 4));//ell
       
       
        
        //الميثود الاخيرة
        //split(بحذف السيباريت من النص اي اشارة)
        //ممكن احذف السبيس
        
        String nono="Hi- noura- and- every-one";
        for(String val:nono.split("-")){
            System.out.print(val);//Hi noura and everyone
        }System.out.println("");
        //System.out.println(nono.split("-"));بالطريقة هاي بعطي عناوين فقط
        
        //done
        //__________________________________________________________
        
        
        
        
     
         }
    
}

